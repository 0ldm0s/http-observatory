#!/usr/bin/env python3

from __future__ import print_function

import os
import requests
import sys
import time

if 'HTTPOBS_DEV' in os.environ:
    HTTP_OBS_URL = 'http://http-observatory.services.mozilla.com:5000/api/v1'
    MAX_QUEUE = 192
else:
    HTTP_OBS_URL = 'https://http-observatory.services.mozilla.com/api/v1'
    MAX_QUEUE = 512

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print('Usage: ' + sys.argv[0] + ' <file>')
        exit(1)

    start_time = time.time()
    total_scanned = 0

    try:
        with open(sys.argv[1], 'r') as alexafp:
            hosts = [host.strip().split(',')[1] if ',' in host else host.strip() for host in alexafp]
    except:
        print('Cannot open ' + sys.argv[1])
        exit(1)

    while True:
        # Get the queue availability
        r = requests.get(HTTP_OBS_URL + '/getScannerStats').json()
        available = MAX_QUEUE - r.get('STARTED', 0) - r.get('PENDING', 0) - r.get('RUNNING', 0)

        print('Queue availability: {queue_avail}. Total scanned: {total_scanned}.'.format(queue_avail=available,
                                                                                          total_scanned=total_scanned))

        while available > 0:
            # Exit if there's nothing left
            if len(hosts) == 0:
                print('Elapsed time: {elapsed_time}'.format(elapsed_time=(time.time() - start_time)))
                exit(0)

            # Start up a new scan
            requests.post(HTTP_OBS_URL + '/analyze?host={host}'.format(host=hosts.pop())),  # start with the end sites
            available -= 1
            total_scanned += 1

        time.sleep(20)
